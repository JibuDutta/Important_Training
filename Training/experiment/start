
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x243>
  400248:	78 38                	js     400282 <_init-0x236>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 7c 3a 2e          	add    %bh,0x2e(%rdx,%rdi,1)
  400287:	2d e0 3a e8 f4       	sub    $0xf4e83ae0,%eax
  40028c:	89 e7                	mov    %esp,%edi
  40028e:	0b 17                	or     (%rdi),%edx
  400290:	d4                   	(bad)  
  400291:	91                   	xchg   %eax,%ecx
  400292:	50                   	push   %rax
  400293:	d8 c0                	fadd   %st(0),%st
  400295:	02 d8                	add    %al,%bl
  400297:	0d                   	.byte 0xd

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	1a 00                	sbb    (%rax),%al
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	1f                   	(bad)  
  4002e9:	00 00                	add    %al,(%rax)
  4002eb:	00 12                	add    %dl,(%rdx)
	...
  4002fd:	00 00                	add    %al,(%rax)
  4002ff:	00 30                	add    %dh,(%rax)
  400301:	00 00                	add    %al,(%rax)
  400303:	00 12                	add    %dl,(%rdx)
	...
  400315:	00 00                	add    %al,(%rax)
  400317:	00 37                	add    %dh,(%rdi)
  400319:	00 00                	add    %al,(%rax)
  40031b:	00 12                	add    %dl,(%rdx)
	...
  40032d:	00 00                	add    %al,(%rax)
  40032f:	00 49 00             	add    %cl,0x0(%rcx)
  400332:	00 00                	add    %al,(%rax)
  400334:	20 00                	and    %al,(%rax)
	...
  400346:	00 00                	add    %al,(%rax)
  400348:	0b 00                	or     (%rax),%eax
  40034a:	00 00                	add    %al,(%rax)
  40034c:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000400360 <.dynstr>:
  400360:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400364:	63 2e                	movslq (%rsi),%ebp
  400366:	73 6f                	jae    4003d7 <_init-0xe1>
  400368:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
  40036d:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
  400374:	73 63                	jae    4003d9 <_init-0xdf>
  400376:	61                   	(bad)  
  400377:	6e                   	outsb  %ds:(%rsi),(%dx)
  400378:	66 00 70 75          	data16 add %dh,0x75(%rax)
  40037c:	74 73                	je     4003f1 <_init-0xc7>
  40037e:	00 5f 5f             	add    %bl,0x5f(%rdi)
  400381:	73 74                	jae    4003f7 <_init-0xc1>
  400383:	61                   	(bad)  
  400384:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
  400387:	63 68 6b             	movslq 0x6b(%rax),%ebp
  40038a:	5f                   	pop    %rdi
  40038b:	66 61                	data16 (bad) 
  40038d:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
  400394:	74 
  400395:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
  400399:	6c                   	insb   (%dx),%es:(%rdi)
  40039a:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  4003a1:	72 74                	jb     400417 <_init-0xa1>
  4003a3:	5f                   	pop    %rdi
  4003a4:	6d                   	insl   (%dx),%es:(%rdi)
  4003a5:	61                   	(bad)  
  4003a6:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  4003ad:	6f                   	outsl  %ds:(%rsi),(%dx)
  4003ae:	6e                   	outsb  %ds:(%rsi),(%dx)
  4003af:	5f                   	pop    %rdi
  4003b0:	73 74                	jae    400426 <_init-0x92>
  4003b2:	61                   	(bad)  
  4003b3:	72 74                	jb     400429 <_init-0x8f>
  4003b5:	5f                   	pop    %rdi
  4003b6:	5f                   	pop    %rdi
  4003b7:	00 47 4c             	add    %al,0x4c(%rdi)
  4003ba:	49                   	rex.WB
  4003bb:	42                   	rex.X
  4003bc:	43 5f                	rex.XB pop %r15
  4003be:	32 2e                	xor    (%rsi),%ch
  4003c0:	37                   	(bad)  
  4003c1:	00 47 4c             	add    %al,0x4c(%rdi)
  4003c4:	49                   	rex.WB
  4003c5:	42                   	rex.X
  4003c6:	43 5f                	rex.XB pop %r15
  4003c8:	32 2e                	xor    (%rsi),%ch
  4003ca:	34 00                	xor    $0x0,%al
  4003cc:	47                   	rex.RXB
  4003cd:	4c                   	rex.WR
  4003ce:	49                   	rex.WB
  4003cf:	42                   	rex.X
  4003d0:	43 5f                	rex.XB pop %r15
  4003d2:	32 2e                	xor    (%rsi),%ch
  4003d4:	32 2e                	xor    (%rsi),%ch
  4003d6:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003d8 <.gnu.version>:
  4003d8:	00 00                	add    %al,(%rax)
  4003da:	02 00                	add    (%rax),%al
  4003dc:	03 00                	add    (%rax),%eax
  4003de:	02 00                	add    (%rax),%al
  4003e0:	02 00                	add    (%rax),%al
  4003e2:	00 00                	add    %al,(%rax)
  4003e4:	04 00                	add    $0x0,%al

Disassembly of section .gnu.version_r:

00000000004003e8 <.gnu.version_r>:
  4003e8:	01 00                	add    %eax,(%rax)
  4003ea:	03 00                	add    (%rax),%eax
  4003ec:	01 00                	add    %eax,(%rax)
  4003ee:	00 00                	add    %al,(%rax)
  4003f0:	10 00                	adc    %al,(%rax)
  4003f2:	00 00                	add    %al,(%rax)
  4003f4:	00 00                	add    %al,(%rax)
  4003f6:	00 00                	add    %al,(%rax)
  4003f8:	17                   	(bad)  
  4003f9:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%rcx),%ebp
  400400:	58                   	pop    %rax
  400401:	00 00                	add    %al,(%rax)
  400403:	00 10                	add    %dl,(%rax)
  400405:	00 00                	add    %al,(%rax)
  400407:	00 14 69             	add    %dl,(%rcx,%rbp,2)
  40040a:	69 0d 00 00 03 00 62 	imul   $0x62,0x30000(%rip),%ecx        # 430414 <__FRAME_END__+0x2fb7c>
  400411:	00 00 00 
  400414:	10 00                	adc    %al,(%rax)
  400416:	00 00                	add    %al,(%rax)
  400418:	75 1a                	jne    400434 <_init-0x84>
  40041a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400420:	6c                   	insb   (%dx),%es:(%rdi)
  400421:	00 00                	add    %al,(%rax)
  400423:	00 00                	add    %al,(%rax)
  400425:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400428 <.rela.dyn>:
  400428:	f8                   	clc    
  400429:	0f 60 00             	punpcklbw (%rax),%mm0
  40042c:	00 00                	add    %al,(%rax)
  40042e:	00 00                	add    %al,(%rax)
  400430:	06                   	(bad)  
  400431:	00 00                	add    %al,(%rax)
  400433:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400439 <_init-0x7f>
  400439:	00 00                	add    %al,(%rax)
  40043b:	00 00                	add    %al,(%rax)
  40043d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000400440 <.rela.plt>:
  400440:	18 10                	sbb    %dl,(%rax)
  400442:	60                   	(bad)  
  400443:	00 00                	add    %al,(%rax)
  400445:	00 00                	add    %al,(%rax)
  400447:	00 07                	add    %al,(%rdi)
  400449:	00 00                	add    %al,(%rax)
  40044b:	00 01                	add    %al,(%rcx)
	...
  400455:	00 00                	add    %al,(%rax)
  400457:	00 20                	add    %ah,(%rax)
  400459:	10 60 00             	adc    %ah,0x0(%rax)
  40045c:	00 00                	add    %al,(%rax)
  40045e:	00 00                	add    %al,(%rax)
  400460:	07                   	(bad)  
  400461:	00 00                	add    %al,(%rax)
  400463:	00 02                	add    %al,(%rdx)
	...
  40046d:	00 00                	add    %al,(%rax)
  40046f:	00 28                	add    %ch,(%rax)
  400471:	10 60 00             	adc    %ah,0x0(%rax)
  400474:	00 00                	add    %al,(%rax)
  400476:	00 00                	add    %al,(%rax)
  400478:	07                   	(bad)  
  400479:	00 00                	add    %al,(%rax)
  40047b:	00 03                	add    %al,(%rbx)
	...
  400485:	00 00                	add    %al,(%rax)
  400487:	00 30                	add    %dh,(%rax)
  400489:	10 60 00             	adc    %ah,0x0(%rax)
  40048c:	00 00                	add    %al,(%rax)
  40048e:	00 00                	add    %al,(%rax)
  400490:	07                   	(bad)  
  400491:	00 00                	add    %al,(%rax)
  400493:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  40049e:	00 00                	add    %al,(%rax)
  4004a0:	38 10                	cmp    %dl,(%rax)
  4004a2:	60                   	(bad)  
  4004a3:	00 00                	add    %al,(%rax)
  4004a5:	00 00                	add    %al,(%rax)
  4004a7:	00 07                	add    %al,(%rdi)
  4004a9:	00 00                	add    %al,(%rax)
  4004ab:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

00000000004004b8 <_init>:
  4004b8:	48 83 ec 08          	sub    $0x8,%rsp
  4004bc:	48 8b 05 35 0b 20 00 	mov    0x200b35(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4004c3:	48 85 c0             	test   %rax,%rax
  4004c6:	74 05                	je     4004cd <_init+0x15>
  4004c8:	e8 73 00 00 00       	callq  400540 <__isoc99_scanf@plt+0x10>
  4004cd:	48 83 c4 08          	add    $0x8,%rsp
  4004d1:	c3                   	retq   

Disassembly of section .plt:

00000000004004e0 <puts@plt-0x10>:
  4004e0:	ff 35 22 0b 20 00    	pushq  0x200b22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004e6:	ff 25 24 0b 20 00    	jmpq   *0x200b24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004f0 <puts@plt>:
  4004f0:	ff 25 22 0b 20 00    	jmpq   *0x200b22(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004f6:	68 00 00 00 00       	pushq  $0x0
  4004fb:	e9 e0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400500 <__stack_chk_fail@plt>:
  400500:	ff 25 1a 0b 20 00    	jmpq   *0x200b1a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400506:	68 01 00 00 00       	pushq  $0x1
  40050b:	e9 d0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400510 <printf@plt>:
  400510:	ff 25 12 0b 20 00    	jmpq   *0x200b12(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400516:	68 02 00 00 00       	pushq  $0x2
  40051b:	e9 c0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400520 <__libc_start_main@plt>:
  400520:	ff 25 0a 0b 20 00    	jmpq   *0x200b0a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400526:	68 03 00 00 00       	pushq  $0x3
  40052b:	e9 b0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400530 <__isoc99_scanf@plt>:
  400530:	ff 25 02 0b 20 00    	jmpq   *0x200b02(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400536:	68 04 00 00 00       	pushq  $0x4
  40053b:	e9 a0 ff ff ff       	jmpq   4004e0 <_init+0x28>

Disassembly of section .plt.got:

0000000000400540 <.plt.got>:
  400540:	ff 25 b2 0a 20 00    	jmpq   *0x200ab2(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400546:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400550 <_start>:
  400550:	31 ed                	xor    %ebp,%ebp
  400552:	49 89 d1             	mov    %rdx,%r9
  400555:	5e                   	pop    %rsi
  400556:	48 89 e2             	mov    %rsp,%rdx
  400559:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40055d:	50                   	push   %rax
  40055e:	54                   	push   %rsp
  40055f:	49 c7 c0 40 07 40 00 	mov    $0x400740,%r8
  400566:	48 c7 c1 d0 06 40 00 	mov    $0x4006d0,%rcx
  40056d:	48 c7 c7 46 06 40 00 	mov    $0x400646,%rdi
  400574:	e8 a7 ff ff ff       	callq  400520 <__libc_start_main@plt>
  400579:	f4                   	hlt    
  40057a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400580 <deregister_tm_clones>:
  400580:	b8 57 10 60 00       	mov    $0x601057,%eax
  400585:	55                   	push   %rbp
  400586:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40058c:	48 83 f8 0e          	cmp    $0xe,%rax
  400590:	48 89 e5             	mov    %rsp,%rbp
  400593:	76 1b                	jbe    4005b0 <deregister_tm_clones+0x30>
  400595:	b8 00 00 00 00       	mov    $0x0,%eax
  40059a:	48 85 c0             	test   %rax,%rax
  40059d:	74 11                	je     4005b0 <deregister_tm_clones+0x30>
  40059f:	5d                   	pop    %rbp
  4005a0:	bf 50 10 60 00       	mov    $0x601050,%edi
  4005a5:	ff e0                	jmpq   *%rax
  4005a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4005ae:	00 00 
  4005b0:	5d                   	pop    %rbp
  4005b1:	c3                   	retq   
  4005b2:	0f 1f 40 00          	nopl   0x0(%rax)
  4005b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005bd:	00 00 00 

00000000004005c0 <register_tm_clones>:
  4005c0:	be 50 10 60 00       	mov    $0x601050,%esi
  4005c5:	55                   	push   %rbp
  4005c6:	48 81 ee 50 10 60 00 	sub    $0x601050,%rsi
  4005cd:	48 c1 fe 03          	sar    $0x3,%rsi
  4005d1:	48 89 e5             	mov    %rsp,%rbp
  4005d4:	48 89 f0             	mov    %rsi,%rax
  4005d7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4005db:	48 01 c6             	add    %rax,%rsi
  4005de:	48 d1 fe             	sar    %rsi
  4005e1:	74 15                	je     4005f8 <register_tm_clones+0x38>
  4005e3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005e8:	48 85 c0             	test   %rax,%rax
  4005eb:	74 0b                	je     4005f8 <register_tm_clones+0x38>
  4005ed:	5d                   	pop    %rbp
  4005ee:	bf 50 10 60 00       	mov    $0x601050,%edi
  4005f3:	ff e0                	jmpq   *%rax
  4005f5:	0f 1f 00             	nopl   (%rax)
  4005f8:	5d                   	pop    %rbp
  4005f9:	c3                   	retq   
  4005fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400600 <__do_global_dtors_aux>:
  400600:	80 3d 49 0a 20 00 00 	cmpb   $0x0,0x200a49(%rip)        # 601050 <__TMC_END__>
  400607:	75 11                	jne    40061a <__do_global_dtors_aux+0x1a>
  400609:	55                   	push   %rbp
  40060a:	48 89 e5             	mov    %rsp,%rbp
  40060d:	e8 6e ff ff ff       	callq  400580 <deregister_tm_clones>
  400612:	5d                   	pop    %rbp
  400613:	c6 05 36 0a 20 00 01 	movb   $0x1,0x200a36(%rip)        # 601050 <__TMC_END__>
  40061a:	f3 c3                	repz retq 
  40061c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400620 <frame_dummy>:
  400620:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400625:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400629:	75 05                	jne    400630 <frame_dummy+0x10>
  40062b:	eb 93                	jmp    4005c0 <register_tm_clones>
  40062d:	0f 1f 00             	nopl   (%rax)
  400630:	b8 00 00 00 00       	mov    $0x0,%eax
  400635:	48 85 c0             	test   %rax,%rax
  400638:	74 f1                	je     40062b <frame_dummy+0xb>
  40063a:	55                   	push   %rbp
  40063b:	48 89 e5             	mov    %rsp,%rbp
  40063e:	ff d0                	callq  *%rax
  400640:	5d                   	pop    %rbp
  400641:	e9 7a ff ff ff       	jmpq   4005c0 <register_tm_clones>

0000000000400646 <main>:
  400646:	55                   	push   %rbp
  400647:	48 89 e5             	mov    %rsp,%rbp
  40064a:	48 83 ec 10          	sub    $0x10,%rsp
  40064e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400655:	00 00 
  400657:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40065b:	31 c0                	xor    %eax,%eax
  40065d:	bf 54 07 40 00       	mov    $0x400754,%edi
  400662:	e8 89 fe ff ff       	callq  4004f0 <puts@plt>
  400667:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  40066b:	48 89 c6             	mov    %rax,%rsi
  40066e:	bf 5f 07 40 00       	mov    $0x40075f,%edi
  400673:	b8 00 00 00 00       	mov    $0x0,%eax
  400678:	e8 b3 fe ff ff       	callq  400530 <__isoc99_scanf@plt>
  40067d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400680:	83 e0 01             	and    $0x1,%eax
  400683:	85 c0                	test   %eax,%eax
  400685:	74 13                	je     40069a <main+0x54>
  400687:	bf 62 07 40 00       	mov    $0x400762,%edi
  40068c:	b8 00 00 00 00       	mov    $0x0,%eax
  400691:	e8 7a fe ff ff       	callq  400510 <printf@plt>
  400696:	85 c0                	test   %eax,%eax
  400698:	75 11                	jne    4006ab <main+0x65>
  40069a:	bf 67 07 40 00       	mov    $0x400767,%edi
  40069f:	b8 00 00 00 00       	mov    $0x0,%eax
  4006a4:	e8 67 fe ff ff       	callq  400510 <printf@plt>
  4006a9:	85 c0                	test   %eax,%eax
  4006ab:	90                   	nop
  4006ac:	b8 00 00 00 00       	mov    $0x0,%eax
  4006b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4006b5:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  4006bc:	00 00 
  4006be:	74 05                	je     4006c5 <main+0x7f>
  4006c0:	e8 3b fe ff ff       	callq  400500 <__stack_chk_fail@plt>
  4006c5:	c9                   	leaveq 
  4006c6:	c3                   	retq   
  4006c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4006ce:	00 00 

00000000004006d0 <__libc_csu_init>:
  4006d0:	41 57                	push   %r15
  4006d2:	41 56                	push   %r14
  4006d4:	41 89 ff             	mov    %edi,%r15d
  4006d7:	41 55                	push   %r13
  4006d9:	41 54                	push   %r12
  4006db:	4c 8d 25 2e 07 20 00 	lea    0x20072e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4006e2:	55                   	push   %rbp
  4006e3:	48 8d 2d 2e 07 20 00 	lea    0x20072e(%rip),%rbp        # 600e18 <__init_array_end>
  4006ea:	53                   	push   %rbx
  4006eb:	49 89 f6             	mov    %rsi,%r14
  4006ee:	49 89 d5             	mov    %rdx,%r13
  4006f1:	4c 29 e5             	sub    %r12,%rbp
  4006f4:	48 83 ec 08          	sub    $0x8,%rsp
  4006f8:	48 c1 fd 03          	sar    $0x3,%rbp
  4006fc:	e8 b7 fd ff ff       	callq  4004b8 <_init>
  400701:	48 85 ed             	test   %rbp,%rbp
  400704:	74 20                	je     400726 <__libc_csu_init+0x56>
  400706:	31 db                	xor    %ebx,%ebx
  400708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40070f:	00 
  400710:	4c 89 ea             	mov    %r13,%rdx
  400713:	4c 89 f6             	mov    %r14,%rsi
  400716:	44 89 ff             	mov    %r15d,%edi
  400719:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40071d:	48 83 c3 01          	add    $0x1,%rbx
  400721:	48 39 eb             	cmp    %rbp,%rbx
  400724:	75 ea                	jne    400710 <__libc_csu_init+0x40>
  400726:	48 83 c4 08          	add    $0x8,%rsp
  40072a:	5b                   	pop    %rbx
  40072b:	5d                   	pop    %rbp
  40072c:	41 5c                	pop    %r12
  40072e:	41 5d                	pop    %r13
  400730:	41 5e                	pop    %r14
  400732:	41 5f                	pop    %r15
  400734:	c3                   	retq   
  400735:	90                   	nop
  400736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40073d:	00 00 00 

0000000000400740 <__libc_csu_fini>:
  400740:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400744 <_fini>:
  400744:	48 83 ec 08          	sub    $0x8,%rsp
  400748:	48 83 c4 08          	add    $0x8,%rsp
  40074c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400750 <_IO_stdin_used>:
  400750:	01 00                	add    %eax,(%rax)
  400752:	02 00                	add    (%rax),%al
  400754:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  400756:	74 65                	je     4007bd <__GNU_EH_FRAME_HDR+0x4d>
  400758:	72 20                	jb     40077a <__GNU_EH_FRAME_HDR+0xa>
  40075a:	61                   	(bad)  
  40075b:	20 4e 6f             	and    %cl,0x6f(%rsi)
  40075e:	00 25 64 00 4f 44    	add    %ah,0x444f0064(%rip)        # 448f07c8 <_end+0x442ef770>
  400764:	44 0a 00             	or     (%rax),%r8b
  400767:	45 76 65             	rex.RB jbe 4007cf <__GNU_EH_FRAME_HDR+0x5f>
  40076a:	6e                   	outsb  %ds:(%rsi),(%dx)
  40076b:	0a 00                	or     (%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000400770 <__GNU_EH_FRAME_HDR>:
  400770:	01 1b                	add    %ebx,(%rbx)
  400772:	03 3b                	add    (%rbx),%edi
  400774:	34 00                	xor    $0x0,%al
  400776:	00 00                	add    %al,(%rax)
  400778:	05 00 00 00 70       	add    $0x70000000,%eax
  40077d:	fd                   	std    
  40077e:	ff                   	(bad)  
  40077f:	ff 80 00 00 00 e0    	incl   -0x20000000(%rax)
  400785:	fd                   	std    
  400786:	ff                   	(bad)  
  400787:	ff 50 00             	callq  *0x0(%rax)
  40078a:	00 00                	add    %al,(%rax)
  40078c:	d6                   	(bad)  
  40078d:	fe                   	(bad)  
  40078e:	ff                   	(bad)  
  40078f:	ff a8 00 00 00 60    	ljmp   *0x60000000(%rax)
  400795:	ff                   	(bad)  
  400796:	ff                   	(bad)  
  400797:	ff c8                	dec    %eax
  400799:	00 00                	add    %al,(%rax)
  40079b:	00 d0                	add    %dl,%al
  40079d:	ff                   	(bad)  
  40079e:	ff                   	(bad)  
  40079f:	ff 10                	callq  *(%rax)
  4007a1:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

00000000004007a8 <__FRAME_END__-0xf0>:
  4007a8:	14 00                	adc    $0x0,%al
  4007aa:	00 00                	add    %al,(%rax)
  4007ac:	00 00                	add    %al,(%rax)
  4007ae:	00 00                	add    %al,(%rax)
  4007b0:	01 7a 52             	add    %edi,0x52(%rdx)
  4007b3:	00 01                	add    %al,(%rcx)
  4007b5:	78 10                	js     4007c7 <__GNU_EH_FRAME_HDR+0x57>
  4007b7:	01 1b                	add    %ebx,(%rbx)
  4007b9:	0c 07                	or     $0x7,%al
  4007bb:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  4007c1:	00 00                	add    %al,(%rax)
  4007c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007c6:	00 00                	add    %al,(%rax)
  4007c8:	88 fd                	mov    %bh,%ch
  4007ca:	ff                   	(bad)  
  4007cb:	ff 2a                	ljmp   *(%rdx)
	...
  4007d5:	00 00                	add    %al,(%rax)
  4007d7:	00 14 00             	add    %dl,(%rax,%rax,1)
  4007da:	00 00                	add    %al,(%rax)
  4007dc:	00 00                	add    %al,(%rax)
  4007de:	00 00                	add    %al,(%rax)
  4007e0:	01 7a 52             	add    %edi,0x52(%rdx)
  4007e3:	00 01                	add    %al,(%rcx)
  4007e5:	78 10                	js     4007f7 <__GNU_EH_FRAME_HDR+0x87>
  4007e7:	01 1b                	add    %ebx,(%rbx)
  4007e9:	0c 07                	or     $0x7,%al
  4007eb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  4007f1:	00 00                	add    %al,(%rax)
  4007f3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007f6:	00 00                	add    %al,(%rax)
  4007f8:	e8 fc ff ff 60       	callq  614007f9 <_end+0x60dff7a1>
  4007fd:	00 00                	add    %al,(%rax)
  4007ff:	00 00                	add    %al,(%rax)
  400801:	0e                   	(bad)  
  400802:	10 46 0e             	adc    %al,0xe(%rsi)
  400805:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400808:	0b 77 08             	or     0x8(%rdi),%esi
  40080b:	80 00 3f             	addb   $0x3f,(%rax)
  40080e:	1a 3b                	sbb    (%rbx),%bh
  400810:	2a 33                	sub    (%rbx),%dh
  400812:	24 22                	and    $0x22,%al
  400814:	00 00                	add    %al,(%rax)
  400816:	00 00                	add    %al,(%rax)
  400818:	1c 00                	sbb    $0x0,%al
  40081a:	00 00                	add    %al,(%rax)
  40081c:	44 00 00             	add    %r8b,(%rax)
  40081f:	00 26                	add    %ah,(%rsi)
  400821:	fe                   	(bad)  
  400822:	ff                   	(bad)  
  400823:	ff 81 00 00 00 00    	incl   0x0(%rcx)
  400829:	41 0e                	rex.B (bad) 
  40082b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400831:	02 7c 0c 07          	add    0x7(%rsp,%rcx,1),%bh
  400835:	08 00                	or     %al,(%rax)
  400837:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  40083b:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
  40083f:	00 90 fe ff ff 65    	add    %dl,0x65fffffe(%rax)
  400845:	00 00                	add    %al,(%rax)
  400847:	00 00                	add    %al,(%rax)
  400849:	42 0e                	rex.X (bad) 
  40084b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400851:	8e 03                	mov    (%rbx),%es
  400853:	45 0e                	rex.RB (bad) 
  400855:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  40085b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff867016a9 <_end+0xffffffff86100651>
  400861:	06                   	(bad)  
  400862:	48 0e                	rex.W (bad) 
  400864:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40086a:	72 0e                	jb     40087a <__GNU_EH_FRAME_HDR+0x10a>
  40086c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40086f:	30 41 0e             	xor    %al,0xe(%rcx)
  400872:	28 42 0e             	sub    %al,0xe(%rdx)
  400875:	20 42 0e             	and    %al,0xe(%rdx)
  400878:	18 42 0e             	sbb    %al,0xe(%rdx)
  40087b:	10 42 0e             	adc    %al,0xe(%rdx)
  40087e:	08 00                	or     %al,(%rax)
  400880:	14 00                	adc    $0x0,%al
  400882:	00 00                	add    %al,(%rax)
  400884:	ac                   	lods   %ds:(%rsi),%al
  400885:	00 00                	add    %al,(%rax)
  400887:	00 b8 fe ff ff 02    	add    %bh,0x2fffffe(%rax)
	...

0000000000400898 <__FRAME_END__>:
  400898:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	20 06                	and    %al,(%rsi)
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	00 06                	add    %al,(%rsi)
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	b8 04 40 00 00       	mov    $0x4004,%eax
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 44 07 40          	add    %al,0x40(%rdi,%rax,1)
  600e53:	00 00                	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
  600e59:	00 00                	add    %al,(%rax)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 10                	add    %dl,(%rax)
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 60 03             	add    %ah,0x3(%rax)
  600eb2:	40 00 00             	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 06                	add    %al,(%rsi)
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 78 00             	add    %bh,0x0(%rax)
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	0b 00                	or     (%rax),%eax
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	18 00                	sbb    %al,(%rax)
  600ee2:	00 00                	add    %al,(%rax)
  600ee4:	00 00                	add    %al,(%rax)
  600ee6:	00 00                	add    %al,(%rax)
  600ee8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	78 00                	js     600f12 <_DYNAMIC+0xea>
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 40 04             	add    %al,0x4(%rax)
  600f32:	40 00 00             	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 28                	add    %ch,(%rax)
  600f41:	04 40                	add    $0x40,%al
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 18                	add    %bl,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 e8                	add    %ch,%al
  600f71:	03 40 00             	add    0x0(%rax),%eax
  600f74:	00 00                	add    %al,(%rax)
  600f76:	00 00                	add    %al,(%rax)
  600f78:	ff                   	(bad)  
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 d8                	add    %bl,%al
  600f91:	03 40 00             	add    0x0(%rax),%eax
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    %dh,%dh
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 06                	add    %al,(%rsi)
  601021:	05 40 00 00 00       	add    $0x40,%eax
  601026:	00 00                	add    %al,(%rax)
  601028:	16                   	(bad)  
  601029:	05 40 00 00 00       	add    $0x40,%eax
  60102e:	00 00                	add    %al,(%rax)
  601030:	26 05 40 00 00 00    	es add $0x40,%eax
  601036:	00 00                	add    %al,(%rax)
  601038:	36 05 40 00 00 00    	ss add $0x40,%eax
	...

Disassembly of section .data:

0000000000601040 <__data_start>:
	...

0000000000601048 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601050 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400440>
   a:	74 75                	je     81 <_init-0x400437>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3440 <_end+0x2fce23e8>
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x400429>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3458 <_end+0x2fce2400>
  2a:	20 32                	and    %dh,(%rdx)
  2c:	30 31                	xor    %dh,(%rcx)
  2e:	36 30 36             	xor    %dh,%ss:(%rsi)
  31:	30 39                	xor    %bh,(%rcx)
	...
